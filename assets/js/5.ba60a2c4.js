(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{171:function(a,t,v){"use strict";v.r(t);var e=v(0),_=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("div",{staticClass:"content"},[v("h2",{attrs:{id:"关于-html2canvas"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关于-html2canvas","aria-hidden":"true"}},[a._v("#")]),a._v(" 关于 html2canvas")]),a._v(" "),v("p",[a._v("了解 html2canvas，它是如何工作的以及它的一些局限性。")]),a._v(" "),v("p",[a._v("在你开始使用这个脚本以前，这里有些帮助你更好的了解脚本的好处及其的一些局限性。")]),a._v(" "),v("h3",{attrs:{id:"介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[a._v("#")]),a._v(" 介绍")]),a._v(" "),v("p",[a._v("html2canvas 是一个 HTML 渲染器。该脚本允许你直接在用户浏览器截取页面或部分网页的“屏幕截屏”，屏幕截图是基于 DOM，因此生成的图片并不一定 100% 一致，因为它没有制作实际的屏幕截图，而是根据页面上可用的信息构建屏幕截图。")]),a._v(" "),v("h3",{attrs:{id:"它是如何工作的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#它是如何工作的","aria-hidden":"true"}},[a._v("#")]),a._v(" 它是如何工作的")]),a._v(" "),v("p",[a._v("该脚本通过读取 DOM 以及应用于元素的不同样式，将当前页面呈现为 canvas 图像。")]),a._v(" "),v("p",[a._v("它不需要来自服务器的任何渲染，因为整个图像是在客户端上创建的。但是，由于它太依赖于浏览器，因此该库不适合在 nodejs 中使用。它也不会神奇地规避任何浏览器内容策略限制，因此呈现跨域内容将需要代理来将内容提供给相同的源。")]),a._v(" "),v("p",[a._v("该脚本仍然处理非常实验状态，因此不建议在生产环境中使用它，也不建议使用它来构建应用程序，因为仍然会有重大更改。")]),a._v(" "),v("h3",{attrs:{id:"浏览器兼容性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性","aria-hidden":"true"}},[a._v("#")]),a._v(" 浏览器兼容性")]),a._v(" "),v("p",[a._v("该库应该可以在以下浏览器上正常工作")]),a._v(" "),v("ul",[v("li",[a._v("Firefox 3.5+")]),a._v(" "),v("li",[a._v("Google Chrome")]),a._v(" "),v("li",[a._v("Opera 12+")]),a._v(" "),v("li",[a._v("IE9+")]),a._v(" "),v("li",[a._v("Edge")]),a._v(" "),v("li",[a._v("Safari 6+")])]),a._v(" "),v("p",[a._v("由于需要手动构建每一个 CSS 属性以支持，因此还有许多尚不支持的属性。")])])}],!1,null,null,null);_.options.__file="html2canvas-about.md";t.default=_.exports}}]);